package ru.job4j.linked;

/**
 * Пример Immutable класса.
 * Требования к Immutable классам:
 *
 *      1. Должен быть объявлен как final, чтобы от него нельзя было наследоваться.
 *         Иначе дочерние классы могут нарушить иммутабельность.
 *
 *      2. Все поля класса должны быть приватными в соответствии с принципами инкапсуляции.
 *
 *      3. Для корректного создания экземпляра в нем должны быть параметризованные конструкторы,
 *         через которые осуществляется первоначальная инициализация полей класса.
 *
 *      4. Для исключения возможности изменения состояния после инстанцирования,
 *         в классе не должно быть сеттеров.
 *
 *      5. Для полей-коллекций необходимо делать глубокие копии, чтобы гарантировать их неизменность.
 *
 * @param <T>
 * @author Aleksandr Kuznetsov.
 * @version 1.0
 */

public final class Node<T> {

    private final Node<T> next;
    private final T value;

    public Node(Node<T> next, T value) {
        this.next = next;
        this.value = value;
    }

    public Node<T> getNext() {
        return next;
    }

    public T getValue() {
        return value;
    }
}
